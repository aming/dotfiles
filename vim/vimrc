" A vimrc file for AMing
"
" Maintainer:	AMing (cyberming at gmail dot com)
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Set the Encoding of VIM
set encoding=utf-8

" Change leader from '\' to ','
let mapleader=","

" Install and load the vim plugins
source $HOME/dotfiles/vim/plugin.vim

" Setting style and color scheme
source $HOME/dotfiles/vim/style.vim

" allow backspacing over everything in insert mode
set backspace=indent,eol,start
set nobackup        " do not keep a backup file, use versions instead
set history=50      " keep 50 lines of command line history
set ruler           " show the cursor position all the time
set showcmd         " display incomplete commands
set showmatch       " Show matching brackets.
set incsearch       " do incremental searching
set ignorecase      " Do case insensitive matching
set smartcase       " Do smart case matching
"set autowrite      " Automatically save before commands like :next and :make
"set hidden         " Hide buffers when they are abandoned
set path+=**        " Enable recursive search to the subfolders
set wildmenu        " Enable command-line completion operation

" Show line numbers
set number
if exists("&relativenumber")
    set relativenumber
    au BufReadPost * set relativenumber
endif

" setting for the tab space
set tabstop=4
set shiftwidth=4
set expandtab

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
  " Right Click to enter and exit insertiong mode
  " From Tips 843
  imap <RightMouse> <Esc>
  nmap <RightMouse> i<LeftMouse>
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
    au!

    " For all text files set 'textwidth' to 78 characters.
    autocmd FileType text setlocal textwidth=78

    " When editing a file, always jump to the last known cursor position.
    " Don't do it when the position is invalid or when inside an event handler
    " (happens when dropping a file on gvim).
    " Also don't do it when the mark is in the first line, that is the default
    " position when opening a file.
    autocmd BufReadPost *
          \ if line("'\"") > 1 && line("'\"") <= line("$") |
          \   exe "normal! g`\"" |
          \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
        \ | wincmd p | diffthis
endif

""""""""""""""""""""""""""""""
" Quickly edit/reload the vimrc file
""""""""""""""""""""""""""""""
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

""""""""""""""""""""""""""""""
" Set working directory to the current file
""""""""""""""""""""""""""""""
nnoremap <leader>cd :cd %:p:h<CR>

